//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:amap_base_flutter/src/android/android.export.g.dart';
import 'package:amap_base_flutter/src/ios/ios.export.g.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
Future<bool> isKindOfcom_autonavi_ae_gmap_maploader_Pools(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_maploader_Pools', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_maploader_ProcessingTile(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_maploader_ProcessingTile', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_GLMapEngine(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapEngine', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_AbstractMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_AbstractMapMessage', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glinterface_MapLabelItem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glinterface_MapLabelItem', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimation2V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimation2V', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimFling(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimFling', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimation1V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimation1V', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_style_StyleItem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_style_StyleItem', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_style_StyleElement(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_style_StyleElement', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_GLMapRender(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapRender', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_GLMapState(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapState', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_GLTextureProperty(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLTextureProperty', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_GLCrossVector(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLCrossVector', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_GLRouteProperty(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLRouteProperty', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlayTexture(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlayTexture', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_ae_gmap_GLMapEngine_InitParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapEngine_InitParam', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_maploader_NetworkState(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_maploader_NetworkState', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_maploader_AMapLoader(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_maploader_AMapLoader', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_MapProjection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_MapProjection', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_tools_TextTextureGenerator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_TextTextureGenerator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_tools_GLFileUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GLFileUtil', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_tools_GlMapUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GlMapUtil', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_tools_GLMapStaticValue(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GLMapStaticValue', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_tools_GLConvertUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GLConvertUtil', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_MsgProcessor(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_MsgProcessor', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AbstractNativeInstance(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AbstractNativeInstance', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_LinkInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_LinkInfo', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AMapNativePolyline(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativePolyline', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_IPoint(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_IPoint', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_DPoint(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_DPoint', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AMapNativeRenderer(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativeRenderer', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_FileUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FileUtil', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLTranslateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLTranslateAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLRotateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLRotateAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLAlphaAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLAlphaAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLScaleAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLScaleAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLTransformation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLTransformation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLAnimationSet(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLAnimationSet', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLEmergeAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLEmergeAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_animation_GLAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_MapConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_MapConfig', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_message_HoverGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_HoverGestureMapMessage', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_message_MoveGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_MoveGestureMapMessage', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_message_ScaleGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_ScaleGestureMapMessage', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_message_AbstractGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_AbstractGestureMapMessage', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_message_RotateGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_RotateGestureMapMessage', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_FPointBounds(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPointBounds', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_CoordUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_CoordUtil', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AeUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AeUtil', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_VirtualEarthProjection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_VirtualEarthProjection', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_Rectangle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Rectangle', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_Inner_3dMap_location(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Inner_3dMap_location', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AMapEngineUtils(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapEngineUtils', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_FPoint3(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPoint3', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AMapEtaDecoder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapEtaDecoder', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_FPointBounds_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPointBounds_Builder', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_Inner_3dMap_locationOption(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Inner_3dMap_locationOption', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_FPoint(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPoint', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AMapNativeParticleSystem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativeParticleSystem', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AbstractCameraUpdateMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AbstractCameraUpdateMessage', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_AMapNativeBuildingRenderer(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativeBuildingRenderer', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_autonavi_amap_mapcore_Convert(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Convert', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_offlineservice_AMapPermissionActivity(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_offlineservice_AMapPermissionActivity', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_UiSettings(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_UiSettings', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_SwipeDismissTouchListener(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_SwipeDismissTouchListener', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_InfoWindowParams(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_InfoWindowParams', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_CameraUpdateFactory(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_CameraUpdateFactory', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_AMapException(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapException', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_AMapOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_AMapOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_CoordinateConverter(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_CoordinateConverter', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_utils_SpatialRelationUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_utils_SpatialRelationUtil', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_utils_overlay_MovingPointOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_utils_overlay_MovingPointOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_utils_overlay_SmoothMoveMarker(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_utils_overlay_SmoothMoveMarker', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_CameraUpdate(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_CameraUpdate', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_SwipeDismissCallBack(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_SwipeDismissCallBack', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_SwipeDismissView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_SwipeDismissView', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_MapsInitializer(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_MapsInitializer', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_OfflineMapStatus(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapStatus', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_OfflineMapProvince(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapProvince', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_DownloadProgressView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_DownloadProgressView', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_Province(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_Province', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_OfflineMapManager(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapManager', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_OfflineMapCity(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapCity', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_OfflineMapActivity(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapActivity', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_offlinemap_City(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_City', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_Projection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_Projection', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Polygon(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Polygon', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BitmapDescriptor(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BitmapDescriptor', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_PolygonHoleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolygonHoleOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_TileOverlayOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileOverlayOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Poi(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Poi', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MyLocationStyle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MyLocationStyle', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_RouteOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_RouteOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_VisibleRegion(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_VisibleRegion', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_LatLngCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CircleHoleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CircleHoleOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Text(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Text', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_LatLngBounds_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngBounds_Builder', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_NavigateArrowOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NavigateArrowOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BitmapDescriptorFactory(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BitmapDescriptorFactory', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_UrlTileProvider(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_UrlTileProvider', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MultiPointOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MultiPointOverlayOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_PoiCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PoiCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_PolylineOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolylineOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Tile(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Tile', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_GL3DModel(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GL3DModel', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Gradient(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Gradient', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_NaviPara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NaviPara', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_GroundOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GroundOverlayOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_GL3DModelOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GL3DModelOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_GroundOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GroundOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MyTrafficStyle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MyTrafficStyle', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CameraPosition(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CameraPosition', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_TextOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TextOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_PoiPara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PoiPara', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MarkerOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MarkerOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_HeatmapTileProvider(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_HeatmapTileProvider', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_NavigateArrow(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NavigateArrow', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_animation_AnimationSet(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_AnimationSet', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_animation_RotateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_RotateAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_animation_TranslateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_TranslateAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_animation_Animation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_Animation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_animation_EmergeAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_EmergeAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_animation_AlphaAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_AlphaAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_animation_ScaleAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_ScaleAnimation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_LatLngBounds(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngBounds', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CustomMapStyleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CustomMapStyleOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BuildingOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BuildingOverlayOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CrossOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CrossOverlayOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_VisibleRegionCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_VisibleRegionCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_LatLng(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLng', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_TileProjection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileProjection', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_AMapPara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_AMapPara', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CameraPosition_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CameraPosition_Builder', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BasePointOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BasePointOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CircleOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CircleOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Arc(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Arc', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_AMapCameraInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_AMapCameraInfo', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Circle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Circle', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_PolygonOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolygonOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_WeightedLatLng(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_WeightedLatLng', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MyLocationStyleCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MyLocationStyleCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MarkerOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MarkerOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MultiPointItem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MultiPointItem', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_LatLngBoundsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngBoundsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_ArcOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_ArcOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BitmapDescriptorCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BitmapDescriptorCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CircleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CircleOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_NavigateArrowOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NavigateArrowOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_RuntimeRemoteException(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_RuntimeRemoteException', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_HeatmapTileProvider_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_HeatmapTileProvider_Builder', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_MultiPointOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MultiPointOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BaseOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BaseOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_PolylineOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolylineOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BaseOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BaseOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Marker(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Marker', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_TileOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileOverlayOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_RoutePara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_RoutePara', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_ArcOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_ArcOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CameraPositionCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CameraPositionCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_CrossOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CrossOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ParticleOverLifeModule(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverLifeModule', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ConstantRotationOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ConstantRotationOverLife', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_SinglePointParticleShape(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_SinglePointParticleShape', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_CurveSizeOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_CurveSizeOverLife', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ParticleEmissionModule(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleEmissionModule', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_SizeOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_SizeOverLife', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_RectParticleShape(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RectParticleShape', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ColorGenerate(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ColorGenerate', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_VelocityGenerate(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_VelocityGenerate', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_RotationOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RotationOverLife', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ParticleShapeModule(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleShapeModule', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ParticleOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverlayOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_particle_ParticleOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BaseHoleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BaseHoleOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_TextOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TextOptions', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_TileOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_PolygonOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolygonOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_TileProjectionCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileProjectionCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_GroundOverlayOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GroundOverlayOptionsCreator', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_IndoorBuildingInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_IndoorBuildingInfo', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_Polyline(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Polyline', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_model_BuildingOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BuildingOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_TextureMapView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_TextureMapView', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_AMapUtils(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapUtils', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_InfoWindowAnimationManager(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_InfoWindowAnimationManager', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_WearMapView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_WearMapView', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_AMap(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMap', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_maps_MapView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_maps_MapView', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_trace_TraceLocation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_trace_TraceLocation', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_trace_LBSTraceClient(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_trace_LBSTraceClient', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_trace_TraceOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_trace_TraceOverlay', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfcom_amap_api_mapcore_util_(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::isKindOfcom_amap_api_mapcore_util_', {'refId': ref.refId});
  return result;
}


Future<com_autonavi_ae_gmap_maploader_Pools> ascom_autonavi_ae_gmap_maploader_Pools(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_maploader_Pools', {'refId': ref.refId});
  return com_autonavi_ae_gmap_maploader_Pools()..refId = result;
}

Future<com_autonavi_ae_gmap_maploader_ProcessingTile> ascom_autonavi_ae_gmap_maploader_ProcessingTile(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_maploader_ProcessingTile', {'refId': ref.refId});
  return com_autonavi_ae_gmap_maploader_ProcessingTile()..refId = result;
}

Future<com_autonavi_ae_gmap_GLMapEngine> ascom_autonavi_ae_gmap_GLMapEngine(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapEngine', {'refId': ref.refId});
  return com_autonavi_ae_gmap_GLMapEngine()..refId = result;
}

Future<com_autonavi_ae_gmap_AbstractMapMessage> ascom_autonavi_ae_gmap_AbstractMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_AbstractMapMessage', {'refId': ref.refId});
  return com_autonavi_ae_gmap_AbstractMapMessage()..refId = result;
}

Future<com_autonavi_ae_gmap_glinterface_MapLabelItem> ascom_autonavi_ae_gmap_glinterface_MapLabelItem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glinterface_MapLabelItem', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glinterface_MapLabelItem()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AdglAnimation2V> ascom_autonavi_ae_gmap_glanimation_AdglAnimation2V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglAnimation2V', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AdglAnimation2V()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AdglAnimationContantValues> ascom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AdglAnimationContantValues()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimFling> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimFling(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimFling', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AdglMapAnimFling()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimation> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimation()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AdglAnimation1V> ascom_autonavi_ae_gmap_glanimation_AdglAnimation1V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglAnimation1V', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AdglAnimation1V()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimGroup> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AdglMapAnimGroup()..refId = result;
}

Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V', {'refId': ref.refId});
  return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V()..refId = result;
}

Future<com_autonavi_ae_gmap_style_StyleItem> ascom_autonavi_ae_gmap_style_StyleItem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_style_StyleItem', {'refId': ref.refId});
  return com_autonavi_ae_gmap_style_StyleItem()..refId = result;
}

Future<com_autonavi_ae_gmap_style_StyleElement> ascom_autonavi_ae_gmap_style_StyleElement(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_style_StyleElement', {'refId': ref.refId});
  return com_autonavi_ae_gmap_style_StyleElement()..refId = result;
}

Future<com_autonavi_ae_gmap_GLMapRender> ascom_autonavi_ae_gmap_GLMapRender(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapRender', {'refId': ref.refId});
  return com_autonavi_ae_gmap_GLMapRender()..refId = result;
}

Future<com_autonavi_ae_gmap_GLMapEngine_MapViewInitParam> ascom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam', {'refId': ref.refId});
  return com_autonavi_ae_gmap_GLMapEngine_MapViewInitParam()..refId = result;
}

Future<com_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo> ascom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo()..refId = result;
}

Future<com_autonavi_ae_gmap_GLMapState> ascom_autonavi_ae_gmap_GLMapState(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapState', {'refId': ref.refId});
  return com_autonavi_ae_gmap_GLMapState()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_BaseRouteOverlay> ascom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_BaseRouteOverlay()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_GLTextureProperty> ascom_autonavi_ae_gmap_gloverlay_GLTextureProperty(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLTextureProperty', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_GLTextureProperty()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_GLCrossVector> ascom_autonavi_ae_gmap_gloverlay_GLCrossVector(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLCrossVector', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_GLCrossVector()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits> ascom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr> ascom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_CrossVectorOverlay> ascom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_CrossVectorOverlay()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_GLOverlay> ascom_autonavi_ae_gmap_gloverlay_GLOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLOverlay', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_GLOverlay()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_GLRouteProperty> ascom_autonavi_ae_gmap_gloverlay_GLRouteProperty(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLRouteProperty', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_GLRouteProperty()..refId = result;
}

Future<com_autonavi_ae_gmap_gloverlay_GLOverlayTexture> ascom_autonavi_ae_gmap_gloverlay_GLOverlayTexture(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLOverlayTexture', {'refId': ref.refId});
  return com_autonavi_ae_gmap_gloverlay_GLOverlayTexture()..refId = result;
}

Future<com_autonavi_ae_gmap_GLMapEngine_InitParam> ascom_autonavi_ae_gmap_GLMapEngine_InitParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapEngine_InitParam', {'refId': ref.refId});
  return com_autonavi_ae_gmap_GLMapEngine_InitParam()..refId = result;
}

Future<com_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam> ascom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam()..refId = result;
}

Future<com_autonavi_amap_mapcore_maploader_NetworkState> ascom_autonavi_amap_mapcore_maploader_NetworkState(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_maploader_NetworkState', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_maploader_NetworkState()..refId = result;
}

Future<com_autonavi_amap_mapcore_maploader_AMapLoader> ascom_autonavi_amap_mapcore_maploader_AMapLoader(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_maploader_AMapLoader', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_maploader_AMapLoader()..refId = result;
}

Future<com_autonavi_amap_mapcore_MapProjection> ascom_autonavi_amap_mapcore_MapProjection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_MapProjection', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_MapProjection()..refId = result;
}

Future<com_autonavi_amap_mapcore_tools_TextTextureGenerator> ascom_autonavi_amap_mapcore_tools_TextTextureGenerator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_TextTextureGenerator', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_tools_TextTextureGenerator()..refId = result;
}

Future<com_autonavi_amap_mapcore_tools_GLFileUtil> ascom_autonavi_amap_mapcore_tools_GLFileUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GLFileUtil', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_tools_GLFileUtil()..refId = result;
}

Future<com_autonavi_amap_mapcore_tools_GlMapUtil> ascom_autonavi_amap_mapcore_tools_GlMapUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GlMapUtil', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_tools_GlMapUtil()..refId = result;
}

Future<com_autonavi_amap_mapcore_tools_GLMapStaticValue> ascom_autonavi_amap_mapcore_tools_GLMapStaticValue(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GLMapStaticValue', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_tools_GLMapStaticValue()..refId = result;
}

Future<com_autonavi_amap_mapcore_tools_GLConvertUtil> ascom_autonavi_amap_mapcore_tools_GLConvertUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GLConvertUtil', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_tools_GLConvertUtil()..refId = result;
}

Future<com_autonavi_amap_mapcore_MsgProcessor> ascom_autonavi_amap_mapcore_MsgProcessor(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_MsgProcessor', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_MsgProcessor()..refId = result;
}

Future<com_autonavi_amap_mapcore_AeUtil_UnZipFileBrake> ascom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AeUtil_UnZipFileBrake()..refId = result;
}

Future<com_autonavi_amap_mapcore_AbstractNativeInstance> ascom_autonavi_amap_mapcore_AbstractNativeInstance(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AbstractNativeInstance', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AbstractNativeInstance()..refId = result;
}

Future<com_autonavi_amap_mapcore_LinkInfo> ascom_autonavi_amap_mapcore_LinkInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_LinkInfo', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_LinkInfo()..refId = result;
}

Future<com_autonavi_amap_mapcore_AMapNativePolyline> ascom_autonavi_amap_mapcore_AMapNativePolyline(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativePolyline', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AMapNativePolyline()..refId = result;
}

Future<com_autonavi_amap_mapcore_IPoint> ascom_autonavi_amap_mapcore_IPoint(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_IPoint', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_IPoint()..refId = result;
}

Future<com_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager> ascom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager()..refId = result;
}

Future<com_autonavi_amap_mapcore_DPoint> ascom_autonavi_amap_mapcore_DPoint(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_DPoint', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_DPoint()..refId = result;
}

Future<com_autonavi_amap_mapcore_AMapNativeRenderer> ascom_autonavi_amap_mapcore_AMapNativeRenderer(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativeRenderer', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AMapNativeRenderer()..refId = result;
}

Future<com_autonavi_amap_mapcore_FileUtil> ascom_autonavi_amap_mapcore_FileUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FileUtil', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_FileUtil()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLTranslateAnimation> ascom_autonavi_amap_mapcore_animation_GLTranslateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLTranslateAnimation', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLTranslateAnimation()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLRotateAnimation> ascom_autonavi_amap_mapcore_animation_GLRotateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLRotateAnimation', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLRotateAnimation()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLAlphaAnimation> ascom_autonavi_amap_mapcore_animation_GLAlphaAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLAlphaAnimation', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLAlphaAnimation()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLScaleAnimation> ascom_autonavi_amap_mapcore_animation_GLScaleAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLScaleAnimation', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLScaleAnimation()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLTransformation> ascom_autonavi_amap_mapcore_animation_GLTransformation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLTransformation', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLTransformation()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLAnimationSet> ascom_autonavi_amap_mapcore_animation_GLAnimationSet(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLAnimationSet', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLAnimationSet()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLEmergeAnimation> ascom_autonavi_amap_mapcore_animation_GLEmergeAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLEmergeAnimation', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLEmergeAnimation()..refId = result;
}

Future<com_autonavi_amap_mapcore_animation_GLAnimation> ascom_autonavi_amap_mapcore_animation_GLAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLAnimation', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_animation_GLAnimation()..refId = result;
}

Future<com_autonavi_amap_mapcore_MapConfig> ascom_autonavi_amap_mapcore_MapConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_MapConfig', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_MapConfig()..refId = result;
}

Future<com_autonavi_amap_mapcore_message_HoverGestureMapMessage> ascom_autonavi_amap_mapcore_message_HoverGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_HoverGestureMapMessage', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_message_HoverGestureMapMessage()..refId = result;
}

Future<com_autonavi_amap_mapcore_message_MoveGestureMapMessage> ascom_autonavi_amap_mapcore_message_MoveGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_MoveGestureMapMessage', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_message_MoveGestureMapMessage()..refId = result;
}

Future<com_autonavi_amap_mapcore_message_ScaleGestureMapMessage> ascom_autonavi_amap_mapcore_message_ScaleGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_ScaleGestureMapMessage', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_message_ScaleGestureMapMessage()..refId = result;
}

Future<com_autonavi_amap_mapcore_message_AbstractGestureMapMessage> ascom_autonavi_amap_mapcore_message_AbstractGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_AbstractGestureMapMessage', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_message_AbstractGestureMapMessage()..refId = result;
}

Future<com_autonavi_amap_mapcore_message_RotateGestureMapMessage> ascom_autonavi_amap_mapcore_message_RotateGestureMapMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_RotateGestureMapMessage', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_message_RotateGestureMapMessage()..refId = result;
}

Future<com_autonavi_amap_mapcore_FPointBounds> ascom_autonavi_amap_mapcore_FPointBounds(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPointBounds', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_FPointBounds()..refId = result;
}

Future<com_autonavi_amap_mapcore_CoordUtil> ascom_autonavi_amap_mapcore_CoordUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_CoordUtil', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_CoordUtil()..refId = result;
}

Future<com_autonavi_amap_mapcore_AeUtil> ascom_autonavi_amap_mapcore_AeUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AeUtil', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AeUtil()..refId = result;
}

Future<com_autonavi_amap_mapcore_VirtualEarthProjection> ascom_autonavi_amap_mapcore_VirtualEarthProjection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_VirtualEarthProjection', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_VirtualEarthProjection()..refId = result;
}

Future<com_autonavi_amap_mapcore_Rectangle> ascom_autonavi_amap_mapcore_Rectangle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Rectangle', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_Rectangle()..refId = result;
}

Future<com_autonavi_amap_mapcore_Inner_3dMap_location> ascom_autonavi_amap_mapcore_Inner_3dMap_location(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Inner_3dMap_location', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_Inner_3dMap_location()..refId = result;
}

Future<com_autonavi_amap_mapcore_AMapEngineUtils> ascom_autonavi_amap_mapcore_AMapEngineUtils(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapEngineUtils', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AMapEngineUtils()..refId = result;
}

Future<com_autonavi_amap_mapcore_FPoint3> ascom_autonavi_amap_mapcore_FPoint3(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPoint3', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_FPoint3()..refId = result;
}

Future<com_autonavi_amap_mapcore_AMapEtaDecoder> ascom_autonavi_amap_mapcore_AMapEtaDecoder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapEtaDecoder', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AMapEtaDecoder()..refId = result;
}

Future<com_autonavi_amap_mapcore_FPointBounds_Builder> ascom_autonavi_amap_mapcore_FPointBounds_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPointBounds_Builder', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_FPointBounds_Builder()..refId = result;
}

Future<com_autonavi_amap_mapcore_Inner_3dMap_locationOption> ascom_autonavi_amap_mapcore_Inner_3dMap_locationOption(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Inner_3dMap_locationOption', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_Inner_3dMap_locationOption()..refId = result;
}

Future<com_autonavi_amap_mapcore_FPoint> ascom_autonavi_amap_mapcore_FPoint(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPoint', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_FPoint()..refId = result;
}

Future<com_autonavi_amap_mapcore_AMapNativeParticleSystem> ascom_autonavi_amap_mapcore_AMapNativeParticleSystem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativeParticleSystem', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AMapNativeParticleSystem()..refId = result;
}

Future<com_autonavi_amap_mapcore_AbstractCameraUpdateMessage> ascom_autonavi_amap_mapcore_AbstractCameraUpdateMessage(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AbstractCameraUpdateMessage', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AbstractCameraUpdateMessage()..refId = result;
}

Future<com_autonavi_amap_mapcore_AMapNativeBuildingRenderer> ascom_autonavi_amap_mapcore_AMapNativeBuildingRenderer(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativeBuildingRenderer', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_AMapNativeBuildingRenderer()..refId = result;
}

Future<com_autonavi_amap_mapcore_Convert> ascom_autonavi_amap_mapcore_Convert(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Convert', {'refId': ref.refId});
  return com_autonavi_amap_mapcore_Convert()..refId = result;
}

Future<com_amap_api_offlineservice_AMapPermissionActivity> ascom_amap_api_offlineservice_AMapPermissionActivity(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_offlineservice_AMapPermissionActivity', {'refId': ref.refId});
  return com_amap_api_offlineservice_AMapPermissionActivity()..refId = result;
}

Future<com_amap_api_maps_UiSettings> ascom_amap_api_maps_UiSettings(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_UiSettings', {'refId': ref.refId});
  return com_amap_api_maps_UiSettings()..refId = result;
}

Future<com_amap_api_maps_SwipeDismissTouchListener> ascom_amap_api_maps_SwipeDismissTouchListener(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_SwipeDismissTouchListener', {'refId': ref.refId});
  return com_amap_api_maps_SwipeDismissTouchListener()..refId = result;
}

Future<com_amap_api_maps_InfoWindowParams> ascom_amap_api_maps_InfoWindowParams(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_InfoWindowParams', {'refId': ref.refId});
  return com_amap_api_maps_InfoWindowParams()..refId = result;
}

Future<com_amap_api_maps_CameraUpdateFactory> ascom_amap_api_maps_CameraUpdateFactory(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_CameraUpdateFactory', {'refId': ref.refId});
  return com_amap_api_maps_CameraUpdateFactory()..refId = result;
}

Future<com_amap_api_maps_AMapException> ascom_amap_api_maps_AMapException(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_AMapException', {'refId': ref.refId});
  return com_amap_api_maps_AMapException()..refId = result;
}

Future<com_amap_api_maps_AMapOptions> ascom_amap_api_maps_AMapOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_AMapOptions', {'refId': ref.refId});
  return com_amap_api_maps_AMapOptions()..refId = result;
}

Future<com_amap_api_maps_AMapOptionsCreator> ascom_amap_api_maps_AMapOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_AMapOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_AMapOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_CoordinateConverter> ascom_amap_api_maps_CoordinateConverter(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_CoordinateConverter', {'refId': ref.refId});
  return com_amap_api_maps_CoordinateConverter()..refId = result;
}

Future<com_amap_api_maps_utils_SpatialRelationUtil> ascom_amap_api_maps_utils_SpatialRelationUtil(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_utils_SpatialRelationUtil', {'refId': ref.refId});
  return com_amap_api_maps_utils_SpatialRelationUtil()..refId = result;
}

Future<com_amap_api_maps_utils_overlay_MovingPointOverlay> ascom_amap_api_maps_utils_overlay_MovingPointOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_utils_overlay_MovingPointOverlay', {'refId': ref.refId});
  return com_amap_api_maps_utils_overlay_MovingPointOverlay()..refId = result;
}

Future<com_amap_api_maps_utils_overlay_SmoothMoveMarker> ascom_amap_api_maps_utils_overlay_SmoothMoveMarker(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_utils_overlay_SmoothMoveMarker', {'refId': ref.refId});
  return com_amap_api_maps_utils_overlay_SmoothMoveMarker()..refId = result;
}

Future<com_amap_api_maps_CameraUpdate> ascom_amap_api_maps_CameraUpdate(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_CameraUpdate', {'refId': ref.refId});
  return com_amap_api_maps_CameraUpdate()..refId = result;
}

Future<com_amap_api_maps_SwipeDismissCallBack> ascom_amap_api_maps_SwipeDismissCallBack(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_SwipeDismissCallBack', {'refId': ref.refId});
  return com_amap_api_maps_SwipeDismissCallBack()..refId = result;
}

Future<com_amap_api_maps_SwipeDismissView> ascom_amap_api_maps_SwipeDismissView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_SwipeDismissView', {'refId': ref.refId});
  return com_amap_api_maps_SwipeDismissView()..refId = result;
}

Future<com_amap_api_maps_MapsInitializer> ascom_amap_api_maps_MapsInitializer(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_MapsInitializer', {'refId': ref.refId});
  return com_amap_api_maps_MapsInitializer()..refId = result;
}

Future<com_amap_api_maps_offlinemap_OfflineMapStatus> ascom_amap_api_maps_offlinemap_OfflineMapStatus(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapStatus', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_OfflineMapStatus()..refId = result;
}

Future<com_amap_api_maps_offlinemap_OfflineMapProvince> ascom_amap_api_maps_offlinemap_OfflineMapProvince(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapProvince', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_OfflineMapProvince()..refId = result;
}

Future<com_amap_api_maps_offlinemap_DownloadProgressView> ascom_amap_api_maps_offlinemap_DownloadProgressView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_DownloadProgressView', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_DownloadProgressView()..refId = result;
}

Future<com_amap_api_maps_offlinemap_Province> ascom_amap_api_maps_offlinemap_Province(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_Province', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_Province()..refId = result;
}

Future<com_amap_api_maps_offlinemap_OfflineMapManager> ascom_amap_api_maps_offlinemap_OfflineMapManager(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapManager', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_OfflineMapManager()..refId = result;
}

Future<com_amap_api_maps_offlinemap_OfflineMapCity> ascom_amap_api_maps_offlinemap_OfflineMapCity(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapCity', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_OfflineMapCity()..refId = result;
}

Future<com_amap_api_maps_offlinemap_OfflineMapActivity> ascom_amap_api_maps_offlinemap_OfflineMapActivity(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapActivity', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_OfflineMapActivity()..refId = result;
}

Future<com_amap_api_maps_offlinemap_City> ascom_amap_api_maps_offlinemap_City(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_City', {'refId': ref.refId});
  return com_amap_api_maps_offlinemap_City()..refId = result;
}

Future<com_amap_api_maps_Projection> ascom_amap_api_maps_Projection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_Projection', {'refId': ref.refId});
  return com_amap_api_maps_Projection()..refId = result;
}

Future<com_amap_api_maps_model_Polygon> ascom_amap_api_maps_model_Polygon(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Polygon', {'refId': ref.refId});
  return com_amap_api_maps_model_Polygon()..refId = result;
}

Future<com_amap_api_maps_model_BitmapDescriptor> ascom_amap_api_maps_model_BitmapDescriptor(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BitmapDescriptor', {'refId': ref.refId});
  return com_amap_api_maps_model_BitmapDescriptor()..refId = result;
}

Future<com_amap_api_maps_model_PolygonHoleOptions> ascom_amap_api_maps_model_PolygonHoleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_PolygonHoleOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_PolygonHoleOptions()..refId = result;
}

Future<com_amap_api_maps_model_TileOverlayOptionsCreator> ascom_amap_api_maps_model_TileOverlayOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_TileOverlayOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_TileOverlayOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_Poi> ascom_amap_api_maps_model_Poi(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Poi', {'refId': ref.refId});
  return com_amap_api_maps_model_Poi()..refId = result;
}

Future<com_amap_api_maps_model_MyLocationStyle> ascom_amap_api_maps_model_MyLocationStyle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MyLocationStyle', {'refId': ref.refId});
  return com_amap_api_maps_model_MyLocationStyle()..refId = result;
}

Future<com_amap_api_maps_model_RouteOverlay> ascom_amap_api_maps_model_RouteOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_RouteOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_RouteOverlay()..refId = result;
}

Future<com_amap_api_maps_model_VisibleRegion> ascom_amap_api_maps_model_VisibleRegion(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_VisibleRegion', {'refId': ref.refId});
  return com_amap_api_maps_model_VisibleRegion()..refId = result;
}

Future<com_amap_api_maps_model_LatLngCreator> ascom_amap_api_maps_model_LatLngCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_LatLngCreator()..refId = result;
}

Future<com_amap_api_maps_model_CircleHoleOptions> ascom_amap_api_maps_model_CircleHoleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CircleHoleOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_CircleHoleOptions()..refId = result;
}

Future<com_amap_api_maps_model_Text> ascom_amap_api_maps_model_Text(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Text', {'refId': ref.refId});
  return com_amap_api_maps_model_Text()..refId = result;
}

Future<com_amap_api_maps_model_LatLngBounds_Builder> ascom_amap_api_maps_model_LatLngBounds_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngBounds_Builder', {'refId': ref.refId});
  return com_amap_api_maps_model_LatLngBounds_Builder()..refId = result;
}

Future<com_amap_api_maps_model_NavigateArrowOptions> ascom_amap_api_maps_model_NavigateArrowOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_NavigateArrowOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_NavigateArrowOptions()..refId = result;
}

Future<com_amap_api_maps_model_BitmapDescriptorFactory> ascom_amap_api_maps_model_BitmapDescriptorFactory(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BitmapDescriptorFactory', {'refId': ref.refId});
  return com_amap_api_maps_model_BitmapDescriptorFactory()..refId = result;
}

Future<com_amap_api_maps_model_UrlTileProvider> ascom_amap_api_maps_model_UrlTileProvider(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_UrlTileProvider', {'refId': ref.refId});
  return com_amap_api_maps_model_UrlTileProvider()..refId = result;
}

Future<com_amap_api_maps_model_MultiPointOverlayOptions> ascom_amap_api_maps_model_MultiPointOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MultiPointOverlayOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_MultiPointOverlayOptions()..refId = result;
}

Future<com_amap_api_maps_model_PoiCreator> ascom_amap_api_maps_model_PoiCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_PoiCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_PoiCreator()..refId = result;
}

Future<com_amap_api_maps_model_PolylineOptions> ascom_amap_api_maps_model_PolylineOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_PolylineOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_PolylineOptions()..refId = result;
}

Future<com_amap_api_maps_model_Tile> ascom_amap_api_maps_model_Tile(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Tile', {'refId': ref.refId});
  return com_amap_api_maps_model_Tile()..refId = result;
}

Future<com_amap_api_maps_model_GL3DModel> ascom_amap_api_maps_model_GL3DModel(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_GL3DModel', {'refId': ref.refId});
  return com_amap_api_maps_model_GL3DModel()..refId = result;
}

Future<com_amap_api_maps_model_Gradient> ascom_amap_api_maps_model_Gradient(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Gradient', {'refId': ref.refId});
  return com_amap_api_maps_model_Gradient()..refId = result;
}

Future<com_amap_api_maps_model_NaviPara> ascom_amap_api_maps_model_NaviPara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_NaviPara', {'refId': ref.refId});
  return com_amap_api_maps_model_NaviPara()..refId = result;
}

Future<com_amap_api_maps_model_GroundOverlayOptions> ascom_amap_api_maps_model_GroundOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_GroundOverlayOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_GroundOverlayOptions()..refId = result;
}

Future<com_amap_api_maps_model_GL3DModelOptions> ascom_amap_api_maps_model_GL3DModelOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_GL3DModelOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_GL3DModelOptions()..refId = result;
}

Future<com_amap_api_maps_model_GroundOverlay> ascom_amap_api_maps_model_GroundOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_GroundOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_GroundOverlay()..refId = result;
}

Future<com_amap_api_maps_model_MyTrafficStyle> ascom_amap_api_maps_model_MyTrafficStyle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MyTrafficStyle', {'refId': ref.refId});
  return com_amap_api_maps_model_MyTrafficStyle()..refId = result;
}

Future<com_amap_api_maps_model_CameraPosition> ascom_amap_api_maps_model_CameraPosition(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CameraPosition', {'refId': ref.refId});
  return com_amap_api_maps_model_CameraPosition()..refId = result;
}

Future<com_amap_api_maps_model_TextOptionsCreator> ascom_amap_api_maps_model_TextOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_TextOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_TextOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_PoiPara> ascom_amap_api_maps_model_PoiPara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_PoiPara', {'refId': ref.refId});
  return com_amap_api_maps_model_PoiPara()..refId = result;
}

Future<com_amap_api_maps_model_MarkerOptions> ascom_amap_api_maps_model_MarkerOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MarkerOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_MarkerOptions()..refId = result;
}

Future<com_amap_api_maps_model_HeatmapTileProvider> ascom_amap_api_maps_model_HeatmapTileProvider(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_HeatmapTileProvider', {'refId': ref.refId});
  return com_amap_api_maps_model_HeatmapTileProvider()..refId = result;
}

Future<com_amap_api_maps_model_NavigateArrow> ascom_amap_api_maps_model_NavigateArrow(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_NavigateArrow', {'refId': ref.refId});
  return com_amap_api_maps_model_NavigateArrow()..refId = result;
}

Future<com_amap_api_maps_model_animation_AnimationSet> ascom_amap_api_maps_model_animation_AnimationSet(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_AnimationSet', {'refId': ref.refId});
  return com_amap_api_maps_model_animation_AnimationSet()..refId = result;
}

Future<com_amap_api_maps_model_animation_RotateAnimation> ascom_amap_api_maps_model_animation_RotateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_RotateAnimation', {'refId': ref.refId});
  return com_amap_api_maps_model_animation_RotateAnimation()..refId = result;
}

Future<com_amap_api_maps_model_animation_TranslateAnimation> ascom_amap_api_maps_model_animation_TranslateAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_TranslateAnimation', {'refId': ref.refId});
  return com_amap_api_maps_model_animation_TranslateAnimation()..refId = result;
}

Future<com_amap_api_maps_model_animation_Animation> ascom_amap_api_maps_model_animation_Animation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_Animation', {'refId': ref.refId});
  return com_amap_api_maps_model_animation_Animation()..refId = result;
}

Future<com_amap_api_maps_model_animation_EmergeAnimation> ascom_amap_api_maps_model_animation_EmergeAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_EmergeAnimation', {'refId': ref.refId});
  return com_amap_api_maps_model_animation_EmergeAnimation()..refId = result;
}

Future<com_amap_api_maps_model_animation_AlphaAnimation> ascom_amap_api_maps_model_animation_AlphaAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_AlphaAnimation', {'refId': ref.refId});
  return com_amap_api_maps_model_animation_AlphaAnimation()..refId = result;
}

Future<com_amap_api_maps_model_animation_ScaleAnimation> ascom_amap_api_maps_model_animation_ScaleAnimation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_ScaleAnimation', {'refId': ref.refId});
  return com_amap_api_maps_model_animation_ScaleAnimation()..refId = result;
}

Future<com_amap_api_maps_model_LatLngBounds> ascom_amap_api_maps_model_LatLngBounds(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngBounds', {'refId': ref.refId});
  return com_amap_api_maps_model_LatLngBounds()..refId = result;
}

Future<com_amap_api_maps_model_CustomMapStyleOptions> ascom_amap_api_maps_model_CustomMapStyleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CustomMapStyleOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_CustomMapStyleOptions()..refId = result;
}

Future<com_amap_api_maps_model_BuildingOverlayOptions> ascom_amap_api_maps_model_BuildingOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BuildingOverlayOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_BuildingOverlayOptions()..refId = result;
}

Future<com_amap_api_maps_model_CrossOverlayOptions> ascom_amap_api_maps_model_CrossOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CrossOverlayOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_CrossOverlayOptions()..refId = result;
}

Future<com_amap_api_maps_model_VisibleRegionCreator> ascom_amap_api_maps_model_VisibleRegionCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_VisibleRegionCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_VisibleRegionCreator()..refId = result;
}

Future<com_amap_api_maps_model_LatLng> ascom_amap_api_maps_model_LatLng(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLng', {'refId': ref.refId});
  return com_amap_api_maps_model_LatLng()..refId = result;
}

Future<com_amap_api_maps_model_TileProjection> ascom_amap_api_maps_model_TileProjection(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_TileProjection', {'refId': ref.refId});
  return com_amap_api_maps_model_TileProjection()..refId = result;
}

Future<com_amap_api_maps_model_AMapPara> ascom_amap_api_maps_model_AMapPara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_AMapPara', {'refId': ref.refId});
  return com_amap_api_maps_model_AMapPara()..refId = result;
}

Future<com_amap_api_maps_model_CameraPosition_Builder> ascom_amap_api_maps_model_CameraPosition_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CameraPosition_Builder', {'refId': ref.refId});
  return com_amap_api_maps_model_CameraPosition_Builder()..refId = result;
}

Future<com_amap_api_maps_model_BasePointOverlay> ascom_amap_api_maps_model_BasePointOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BasePointOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_BasePointOverlay()..refId = result;
}

Future<com_amap_api_maps_model_CircleOptionsCreator> ascom_amap_api_maps_model_CircleOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CircleOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_CircleOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_Arc> ascom_amap_api_maps_model_Arc(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Arc', {'refId': ref.refId});
  return com_amap_api_maps_model_Arc()..refId = result;
}

Future<com_amap_api_maps_model_AMapCameraInfo> ascom_amap_api_maps_model_AMapCameraInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_AMapCameraInfo', {'refId': ref.refId});
  return com_amap_api_maps_model_AMapCameraInfo()..refId = result;
}

Future<com_amap_api_maps_model_Circle> ascom_amap_api_maps_model_Circle(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Circle', {'refId': ref.refId});
  return com_amap_api_maps_model_Circle()..refId = result;
}

Future<com_amap_api_maps_model_PolygonOptions> ascom_amap_api_maps_model_PolygonOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_PolygonOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_PolygonOptions()..refId = result;
}

Future<com_amap_api_maps_model_WeightedLatLng> ascom_amap_api_maps_model_WeightedLatLng(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_WeightedLatLng', {'refId': ref.refId});
  return com_amap_api_maps_model_WeightedLatLng()..refId = result;
}

Future<com_amap_api_maps_model_MyLocationStyleCreator> ascom_amap_api_maps_model_MyLocationStyleCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MyLocationStyleCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_MyLocationStyleCreator()..refId = result;
}

Future<com_amap_api_maps_model_MarkerOptionsCreator> ascom_amap_api_maps_model_MarkerOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MarkerOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_MarkerOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_MultiPointItem> ascom_amap_api_maps_model_MultiPointItem(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MultiPointItem', {'refId': ref.refId});
  return com_amap_api_maps_model_MultiPointItem()..refId = result;
}

Future<com_amap_api_maps_model_LatLngBoundsCreator> ascom_amap_api_maps_model_LatLngBoundsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngBoundsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_LatLngBoundsCreator()..refId = result;
}

Future<com_amap_api_maps_model_ArcOptions> ascom_amap_api_maps_model_ArcOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_ArcOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_ArcOptions()..refId = result;
}

Future<com_amap_api_maps_model_BitmapDescriptorCreator> ascom_amap_api_maps_model_BitmapDescriptorCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BitmapDescriptorCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_BitmapDescriptorCreator()..refId = result;
}

Future<com_amap_api_maps_model_CircleOptions> ascom_amap_api_maps_model_CircleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CircleOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_CircleOptions()..refId = result;
}

Future<com_amap_api_maps_model_NavigateArrowOptionsCreator> ascom_amap_api_maps_model_NavigateArrowOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_NavigateArrowOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_NavigateArrowOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_RuntimeRemoteException> ascom_amap_api_maps_model_RuntimeRemoteException(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_RuntimeRemoteException', {'refId': ref.refId});
  return com_amap_api_maps_model_RuntimeRemoteException()..refId = result;
}

Future<com_amap_api_maps_model_HeatmapTileProvider_Builder> ascom_amap_api_maps_model_HeatmapTileProvider_Builder(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_HeatmapTileProvider_Builder', {'refId': ref.refId});
  return com_amap_api_maps_model_HeatmapTileProvider_Builder()..refId = result;
}

Future<com_amap_api_maps_model_MultiPointOverlay> ascom_amap_api_maps_model_MultiPointOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_MultiPointOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_MultiPointOverlay()..refId = result;
}

Future<com_amap_api_maps_model_BaseOptions> ascom_amap_api_maps_model_BaseOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BaseOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_BaseOptions()..refId = result;
}

Future<com_amap_api_maps_model_PolylineOptionsCreator> ascom_amap_api_maps_model_PolylineOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_PolylineOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_PolylineOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_BaseOverlay> ascom_amap_api_maps_model_BaseOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BaseOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_BaseOverlay()..refId = result;
}

Future<com_amap_api_maps_model_Marker> ascom_amap_api_maps_model_Marker(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Marker', {'refId': ref.refId});
  return com_amap_api_maps_model_Marker()..refId = result;
}

Future<com_amap_api_maps_model_TileOverlayOptions> ascom_amap_api_maps_model_TileOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_TileOverlayOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_TileOverlayOptions()..refId = result;
}

Future<com_amap_api_maps_model_RoutePara> ascom_amap_api_maps_model_RoutePara(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_RoutePara', {'refId': ref.refId});
  return com_amap_api_maps_model_RoutePara()..refId = result;
}

Future<com_amap_api_maps_model_ArcOptionsCreator> ascom_amap_api_maps_model_ArcOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_ArcOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_ArcOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_CameraPositionCreator> ascom_amap_api_maps_model_CameraPositionCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CameraPositionCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_CameraPositionCreator()..refId = result;
}

Future<com_amap_api_maps_model_CrossOverlay> ascom_amap_api_maps_model_CrossOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_CrossOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_CrossOverlay()..refId = result;
}

Future<com_amap_api_maps_model_particle_ParticleOverLifeModule> ascom_amap_api_maps_model_particle_ParticleOverLifeModule(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverLifeModule', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ParticleOverLifeModule()..refId = result;
}

Future<com_amap_api_maps_model_particle_ConstantRotationOverLife> ascom_amap_api_maps_model_particle_ConstantRotationOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ConstantRotationOverLife', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ConstantRotationOverLife()..refId = result;
}

Future<com_amap_api_maps_model_particle_SinglePointParticleShape> ascom_amap_api_maps_model_particle_SinglePointParticleShape(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_SinglePointParticleShape', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_SinglePointParticleShape()..refId = result;
}

Future<com_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants> ascom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants()..refId = result;
}

Future<com_amap_api_maps_model_particle_CurveSizeOverLife> ascom_amap_api_maps_model_particle_CurveSizeOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_CurveSizeOverLife', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_CurveSizeOverLife()..refId = result;
}

Future<com_amap_api_maps_model_particle_ParticleEmissionModule> ascom_amap_api_maps_model_particle_ParticleEmissionModule(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleEmissionModule', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ParticleEmissionModule()..refId = result;
}

Future<com_amap_api_maps_model_particle_SizeOverLife> ascom_amap_api_maps_model_particle_SizeOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_SizeOverLife', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_SizeOverLife()..refId = result;
}

Future<com_amap_api_maps_model_particle_RectParticleShape> ascom_amap_api_maps_model_particle_RectParticleShape(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RectParticleShape', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_RectParticleShape()..refId = result;
}

Future<com_amap_api_maps_model_particle_ColorGenerate> ascom_amap_api_maps_model_particle_ColorGenerate(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ColorGenerate', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ColorGenerate()..refId = result;
}

Future<com_amap_api_maps_model_particle_VelocityGenerate> ascom_amap_api_maps_model_particle_VelocityGenerate(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_VelocityGenerate', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_VelocityGenerate()..refId = result;
}

Future<com_amap_api_maps_model_particle_RotationOverLife> ascom_amap_api_maps_model_particle_RotationOverLife(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RotationOverLife', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_RotationOverLife()..refId = result;
}

Future<com_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants> ascom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants()..refId = result;
}

Future<com_amap_api_maps_model_particle_ParticleShapeModule> ascom_amap_api_maps_model_particle_ParticleShapeModule(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleShapeModule', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ParticleShapeModule()..refId = result;
}

Future<com_amap_api_maps_model_particle_ParticleOverlayOptionsFactory> ascom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ParticleOverlayOptionsFactory()..refId = result;
}

Future<com_amap_api_maps_model_particle_ParticleOverlayOptions> ascom_amap_api_maps_model_particle_ParticleOverlayOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverlayOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ParticleOverlayOptions()..refId = result;
}

Future<com_amap_api_maps_model_particle_ParticleOverlay> ascom_amap_api_maps_model_particle_ParticleOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_particle_ParticleOverlay()..refId = result;
}

Future<com_amap_api_maps_model_BaseHoleOptions> ascom_amap_api_maps_model_BaseHoleOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BaseHoleOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_BaseHoleOptions()..refId = result;
}

Future<com_amap_api_maps_model_TextOptions> ascom_amap_api_maps_model_TextOptions(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_TextOptions', {'refId': ref.refId});
  return com_amap_api_maps_model_TextOptions()..refId = result;
}

Future<com_amap_api_maps_model_TileOverlay> ascom_amap_api_maps_model_TileOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_TileOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_TileOverlay()..refId = result;
}

Future<com_amap_api_maps_model_PolygonOptionsCreator> ascom_amap_api_maps_model_PolygonOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_PolygonOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_PolygonOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_TileProjectionCreator> ascom_amap_api_maps_model_TileProjectionCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_TileProjectionCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_TileProjectionCreator()..refId = result;
}

Future<com_amap_api_maps_model_GroundOverlayOptionsCreator> ascom_amap_api_maps_model_GroundOverlayOptionsCreator(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_GroundOverlayOptionsCreator', {'refId': ref.refId});
  return com_amap_api_maps_model_GroundOverlayOptionsCreator()..refId = result;
}

Future<com_amap_api_maps_model_IndoorBuildingInfo> ascom_amap_api_maps_model_IndoorBuildingInfo(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_IndoorBuildingInfo', {'refId': ref.refId});
  return com_amap_api_maps_model_IndoorBuildingInfo()..refId = result;
}

Future<com_amap_api_maps_model_Polyline> ascom_amap_api_maps_model_Polyline(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_Polyline', {'refId': ref.refId});
  return com_amap_api_maps_model_Polyline()..refId = result;
}

Future<com_amap_api_maps_model_BuildingOverlay> ascom_amap_api_maps_model_BuildingOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_model_BuildingOverlay', {'refId': ref.refId});
  return com_amap_api_maps_model_BuildingOverlay()..refId = result;
}

Future<com_amap_api_maps_TextureMapView> ascom_amap_api_maps_TextureMapView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_TextureMapView', {'refId': ref.refId});
  return com_amap_api_maps_TextureMapView()..refId = result;
}

Future<com_amap_api_maps_AMapUtils> ascom_amap_api_maps_AMapUtils(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_AMapUtils', {'refId': ref.refId});
  return com_amap_api_maps_AMapUtils()..refId = result;
}

Future<com_amap_api_maps_InfoWindowAnimationManager> ascom_amap_api_maps_InfoWindowAnimationManager(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_InfoWindowAnimationManager', {'refId': ref.refId});
  return com_amap_api_maps_InfoWindowAnimationManager()..refId = result;
}

Future<com_amap_api_maps_WearMapView> ascom_amap_api_maps_WearMapView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_WearMapView', {'refId': ref.refId});
  return com_amap_api_maps_WearMapView()..refId = result;
}

Future<com_amap_api_maps_AMap> ascom_amap_api_maps_AMap(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_AMap', {'refId': ref.refId});
  return com_amap_api_maps_AMap()..refId = result;
}

Future<com_amap_api_maps_MapView> ascom_amap_api_maps_MapView(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_maps_MapView', {'refId': ref.refId});
  return com_amap_api_maps_MapView()..refId = result;
}

Future<com_amap_api_trace_TraceLocation> ascom_amap_api_trace_TraceLocation(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_trace_TraceLocation', {'refId': ref.refId});
  return com_amap_api_trace_TraceLocation()..refId = result;
}

Future<com_amap_api_trace_LBSTraceClient> ascom_amap_api_trace_LBSTraceClient(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_trace_LBSTraceClient', {'refId': ref.refId});
  return com_amap_api_trace_LBSTraceClient()..refId = result;
}

Future<com_amap_api_trace_TraceOverlay> ascom_amap_api_trace_TraceOverlay(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_trace_TraceOverlay', {'refId': ref.refId});
  return com_amap_api_trace_TraceOverlay()..refId = result;
}

Future<com_amap_api_mapcore_util_> ascom_amap_api_mapcore_util_(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_base_flutter').invokeMethod('RefClass::ascom_amap_api_mapcore_util_', {'refId': ref.refId});
  return com_amap_api_mapcore_util_()..refId = result;
}
