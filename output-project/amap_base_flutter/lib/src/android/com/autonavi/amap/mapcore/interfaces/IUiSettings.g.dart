//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_base_flutter/src/ios/ios.export.g.dart';
import 'package:amap_base_flutter/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
mixin com_autonavi_amap_mapcore_interfaces_IUiSettings on java_lang_Object {
  

  

  @mustCallSuper
  Future<bool> isIndoorSwitchEnabled() {
  
    debugPrint('isIndoorSwitchEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setIndoorSwitchEnabled(bool var1) {
  
    debugPrint('setIndoorSwitchEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setScaleControlsEnabled(bool var1) {
  
    debugPrint('setScaleControlsEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setZoomControlsEnabled(bool var1) {
  
    debugPrint('setZoomControlsEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setCompassEnabled(bool var1) {
  
    debugPrint('setCompassEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setMyLocationButtonEnabled(bool var1) {
  
    debugPrint('setMyLocationButtonEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setScrollGesturesEnabled(bool var1) {
  
    debugPrint('setScrollGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setZoomGesturesEnabled(bool var1) {
  
    debugPrint('setZoomGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setTiltGesturesEnabled(bool var1) {
  
    debugPrint('setTiltGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setRotateGesturesEnabled(bool var1) {
  
    debugPrint('setRotateGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setAllGesturesEnabled(bool var1) {
  
    debugPrint('setAllGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setLogoPosition(int var1) {
  
    debugPrint('setLogoPosition::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setZoomPosition(int var1) {
  
    debugPrint('setZoomPosition::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isScaleControlsEnabled() {
  
    debugPrint('isScaleControlsEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isZoomControlsEnabled() {
  
    debugPrint('isZoomControlsEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isCompassEnabled() {
  
    debugPrint('isCompassEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isMyLocationButtonEnabled() {
  
    debugPrint('isMyLocationButtonEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isScrollGesturesEnabled() {
  
    debugPrint('isScrollGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isZoomGesturesEnabled() {
  
    debugPrint('isZoomGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isTiltGesturesEnabled() {
  
    debugPrint('isTiltGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isRotateGesturesEnabled() {
  
    debugPrint('isRotateGesturesEnabled::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<int> getLogoPosition() {
  
    debugPrint('getLogoPosition::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<int> getZoomPosition() {
  
    debugPrint('getZoomPosition::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setZoomInByScreenCenter(bool var1) {
  
    debugPrint('setZoomInByScreenCenter::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isZoomInByScreenCenter() {
  
    debugPrint('isZoomInByScreenCenter::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setLogoBottomMargin(int var1) {
  
    debugPrint('setLogoBottomMargin::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setLogoLeftMargin(int var1) {
  
    debugPrint('setLogoLeftMargin::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<double> getLogoMarginRate(int var1) {
  
    debugPrint('getLogoMarginRate::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setLogoMarginRate(int var1, double var2) {
  
    debugPrint('setLogoMarginRate::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setGestureScaleByMapCenter(bool var1) {
  
    debugPrint('setGestureScaleByMapCenter::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isGestureScaleByMapCenter() {
  
    debugPrint('isGestureScaleByMapCenter::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> setLogoEnable(bool var1) {
  
    debugPrint('setLogoEnable::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<void> requestRefreshLogo() {
  
    debugPrint('requestRefreshLogo::kNativeObjectPool: $kNativeObjectPool');
  }
  
  @mustCallSuper
  Future<bool> isLogoEnable() {
  
    debugPrint('isLogoEnable::kNativeObjectPool: $kNativeObjectPool');
  }
  
}