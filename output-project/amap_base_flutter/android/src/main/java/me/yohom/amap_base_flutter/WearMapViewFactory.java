//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_base_flutter;

import android.content.Context;
import android.view.View;
import android.util.Log;

import java.util.Map;
import java.util.HashMap;

import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.common.StandardMessageCodec;
import io.flutter.plugin.platform.PlatformView;
import io.flutter.plugin.platform.PlatformViewFactory;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
class WearMapViewFactory extends PlatformViewFactory {

    WearMapViewFactory(Registrar registrar) {
        super(StandardMessageCodec.INSTANCE);

        this.registrar = registrar;

        new MethodChannel(registrar.messenger(), "me.yohom/amap_base_flutter/com_amap_api_maps_WearMapView").setMethodCallHandler((methodCall, methodResult) -> {
                    Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
                    AmapBaseFlutterPlugin.Handler handler = handlerMap.get(methodCall.method);
                    if (handler != null) {
                        try {
                            handler.call(args, methodResult);
                        } catch (Exception e) {
                            e.printStackTrace();
                            methodResult.error(e.getMessage(), null, null);
                        }
                    } else {
                        methodResult.notImplemented();
                    }
                });
    }

    private Registrar registrar;

    private final Map<String, AmapBaseFlutterPlugin.Handler> handlerMap = new HashMap<String, AmapBaseFlutterPlugin.Handler>() {{
        put("com.amap.api.maps.WearMapView::getMap", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::getMap(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.maps.AMap result = ref.getMap();
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        put("com.amap.api.maps.WearMapView::onCreate", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onCreate(" + var1 + ")");
            }
        
            // invoke native method
            ref.onCreate(var1);
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onResume", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onResume(" + "" + ")");
            }
        
            // invoke native method
            ref.onResume();
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onPause", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onPause(" + "" + ")");
            }
        
            // invoke native method
            ref.onPause();
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onDestroy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onDestroy(" + "" + ")");
            }
        
            // invoke native method
            ref.onDestroy();
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onLowMemory", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onLowMemory(" + "" + ")");
            }
        
            // invoke native method
            ref.onLowMemory();
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onSaveInstanceState", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onSaveInstanceState(" + var1 + ")");
            }
        
            // invoke native method
            ref.onSaveInstanceState(var1);
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::setVisibility", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::setVisibility(" + var1 + ")");
            }
        
            // invoke native method
            ref.setVisibility(var1);
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::setOnDismissCallbackListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::setOnDismissCallbackListener(" + "" + ")");
            }
        
            // invoke native method
            ref.setOnDismissCallbackListener(new com.amap.api.maps.WearMapView.OnDismissCallback() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(registrar.messenger(), "com.amap.api.maps.WearMapView::setOnDismissCallbackListener::Callback");
        
                // call dart method
                @Override
                public void onDismiss() {
                    // print log
                    Log.d("java-callback", "fluttify-java-callback: onDismiss(" + "" + ")");
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.maps.WearMapView.OnDismissCallback::onDismiss",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNotifySwipe() {
                    // print log
                    Log.d("java-callback", "fluttify-java-callback: onNotifySwipe(" + "" + ")");
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.maps.WearMapView.OnDismissCallback::onNotifySwipe",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
            });
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onDismiss", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onDismiss(" + "" + ")");
            }
        
            // invoke native method
            ref.onDismiss();
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onEnterAmbient", (args, methodResult) -> {
            // args
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onEnterAmbient(" + var1 + ")");
            }
        
            // invoke native method
            ref.onEnterAmbient(var1);
        
            // result
            methodResult.success("success");
        });
        put("com.amap.api.maps.WearMapView::onExitAmbient", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
        
            // print log
            if (BuildConfig.DEBUG) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onExitAmbient(" + "" + ")");
            }
        
            // invoke native method
            ref.onExitAmbient();
        
            // result
            methodResult.success("success");
        });
    }};

    @Override
    public PlatformView create(Context context, int id, Object params) {
        com.amap.api.maps.WearMapView view = new com.amap.api.maps.WearMapView(registrar.activity());
        getHEAP().put(id, view);
        return new PlatformView() {

            // add to HEAP
            @Override
            public View getView() {
                return view;
            }

            @Override
            public void dispose() {}
        };
    }
}
